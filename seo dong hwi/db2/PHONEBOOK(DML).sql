--1. 회사친구의 모든 데이터를 검색하기 위한 질의 (JOIN), 
--   : 이름으로 검색, 전화번호로 검색
SELECT *
FROM PHONEINFO_BASIC B, PHONEINFO_COM C 
WHERE B.IDX=C.FR_REF
AND B.FR_NAME LIKE '%동휘%'
;

SELECT *
FROM PHONEINFO_BASIC B, PHONEINFO_COM C 
WHERE B.IDX=C.FR_REF
AND B.FR_PHONENUMBER LIKE '4372'
;

--2. 대학친구의 모든 데이터를 검색하기 위한 질의 (JOIN)
--   : 이름으로 검색, 전화번호로 검색
SELECT * 
FROM PHONEINFO_BASIC B, PHONEINFO_UNIV U
WHERE B.IDX=U.FR_REF
AND B.FR_NAME LIKE '%길동%'
;

SELECT * 
FROM PHONEINFO_BASIC B, PHONEINFO_UNIV U
WHERE B.IDX=U.FR_REF
AND B.FR_PHONENUMBER LIKE '3356'
;

--3. 회사친구, 대학친구 데이터를 보기위한 각 VIEW를 생성 합시다.
CREATE OR REPLACE VIEW PHONEINFO_COM_VIEWCOM
(IDX, NAME, PNUM, EMAIL, ADDR, REGDATE, COM_NAME)
AS
SELECT B.IDX, B.FR_NAME, B.FR_PHONENUMBER, B.FR_EMAIL, B.FR_ADDRESS, B.FR_REDATE, C.FR_C_COMPANY 
FROM PHONEINFO_BASIC B, PHONEINFO_COM C 
WHERE B.IDX=C.FR_REF
;

CREATE OR REPLACE VIEW PHONEINFO_UNIV_VIEWUNIV
AS
SELECT B.IDX, B.FR_NAME, B.FR_PHONENUMBER, B.FR_EMAIL, B.FR_ADDRESS, B.FR_REDATE, U.FR_U_MAJOR, U.FR_U_YEAR 
FROM PHONEINFO_BASIC B, PHONEINFO_UNIV U 
WHERE B.IDX=U.FR_REF
;

--4. 각테이블의 기본키에 적용할 시퀀스를 생성합시다.
CREATE SEQUENCE BASIC_SEQ
START WITH 0
INCREMENT BY 10
MAXVALUE 1000
MINVALUE 0;

CREATE SEQUENCE COM_SEQ
START WITH 0
INCREMENT BY 10
MAXVALUE 1000
MINVALUE 0;

CREATE SEQUENCE UNIV_SEQ
START WITH 0
INCREMENT BY 10
MAXVALUE 1000
MINVALUE 0;

--5. 회사친구, 대학친구의 데이터를 입력하기위한 INSERT 문을 작성합시다.
INSERT INTO PHONEINFO_BASIC (IDX, FR_NAME, FR_PHONENUMBER, FR_EMAIL, FR_ADDRESS)
VALUES(BASIC_SEQ.NEXTVAL,'서동휘','01033560000','HONG@NAVER.COM','파주');
INSERT INTO PHONEINFO_COM (IDX, FR_C_COMPANY, FR_REF)
VALUES(COM_SEQ.NEXTVAL,'비트',BASIC_SEQ.CURRVAL);

INSERT INTO PHONEINFO_BASIC (IDX, FR_NAME, FR_PHONENUMBER, FR_EMAIL, FR_ADDRESS)
VALUES(BASIC_SEQ.NEXTVAL,'홍길동','01000004372','HONG@NAVER.COM','율도');
INSERT INTO PHONEINFO_UNIV (IDX, FR_U_MAJOR, FR_U_YEAR,FR_REF)
VALUES(UNIV_SEQ.NEXTVAL,'전공',4,BASIC_SEQ.CURRVAL);

--6. 회사친구, 대학친구 삭제 를 위한 SQL을 작성합시다.
DELETE FROM PHONEINFO_COM WHERE FR_REF=10;
DELETE FROM PHONEINFO_BASIC WHERE IDX=10;

DELETE FROM PHONEINFO_UNIV WHERE FR_REF=10;
DELETE FROM PHONEINFO_BASIC WHERE IDX=10;

--7. 빠른검색을 위한 인덱스 설정을 합시다. ( 이름, 전화번호 )
CREATE INDEX PHONEINFO_BASIC_FR_NAME
ON PHONEINFO_BASIC(FR_NAME);

CREATE INDEX PHONEINFO_BASIC_FR_PHONENUMBER
ON PHONEINFO_BASIC(FR_PHONENUMBER);